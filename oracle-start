---- Docker
systemctl start docker
docker pull sath89/oracle-12c
docker run -d -p 8080:8080 -p 1521:1521 sath89/oracle-12c
docker ps
docker ps
docker logs -f 01b4f27ca529


-- USER SQL
CREATE USER "DFS" IDENTIFIED BY "DFS";

GRANT "CONNECT" TO "DFS" ;
GRANT "RESOURCE" TO "DFS" ;
GRANT "AUTHENTICATEDUSER" TO "DFS" ;

GRANT CREATE ANY VIEW TO "DFS" ;


ALTER USER "DFS"
 DEFAULT TABLESPACE "USERS"
 TEMPORARY TABLESPACE "TEMP"
 ACCOUNT UNLOCK ;

 -- QUOTAS
ALTER USER "DFS" QUOTA UNLIMITED ON "USERS";

-------------------


---- SCHEMA

CREATE TABLE FS_INODE (
    ID       NUMBER(19, 0) NOT NULL ENABLE,
    PARENT   NUMBER(19, 0),
    NAME     VARCHAR2(512 CHAR) NOT NULL ENABLE,
    ITYPE    NUMBER(1, 0) NOT NULL ENABLE,
    IMODE    NUMBER(4, 0) DEFAULT 666 NOT NULL ENABLE,
    IOWNER   VARCHAR2(50 CHAR) DEFAULT 'nobody' NOT NULL ENABLE,
    IGROUP   VARCHAR2(50 CHAR) DEFAULT 'nogroup' NOT NULL ENABLE,
    ISIZE    NUMBER(19, 0) DEFAULT 0 NOT NULL ENABLE,
    A_TIME   NUMBER(19, 0) DEFAULT 0 NOT NULL ENABLE,
    M_TIME   NUMBER(19, 0) DEFAULT 0 NOT NULL ENABLE,
    CONSTRAINT FS_INODE_PK PRIMARY KEY ( ID ) ENABLE,
    CONSTRAINT CHK_PARENT_NOT_NULL CHECK ( ID = 0 OR PARENT IS NOT NULL ) ENABLE,
    CONSTRAINT FS_INODE_N_P_UIDX UNIQUE ( NAME, PARENT ) ENABLE
);


CREATE TABLE FS_BLOCK (
  ID NUMBER(19,0) NOT NULL ENABLE, 
  BLOCK_DATA BLOB NOT NULL ENABLE, 
  CONSTRAINT FS_BLOCK_PK PRIMARY KEY (ID)
) LOB (BLOCK_DATA) STORE AS FS_LOB_SG 
( 
  DISABLE STORAGE IN ROW 
  CHUNK 8192  
  NOCACHE
);

ALTER TABLE FS_BLOCK ADD CONSTRAINT FK_FS_BLOCK_INODE FOREIGN KEY (ID) REFERENCES FS_INODE (ID) ENABLE;

CREATE SEQUENCE FS_INODE_SEQ INCREMENT BY 1 START WITH 1 MINVALUE 1 CACHE 200 ORDER;

INSERT INTO FS_INODE (ID, PARENT, NAME, ITYPE) VALUES (0, NULL, 'ROOT OF FS', 1);

COMMIT;

CREATE OR REPLACE VIEW VFS_INODE AS
    SELECT VF.*,
           NVL2(BF.BLOCK_DATA, DBMS_LOB.GETLENGTH(BF.BLOCK_DATA), 0) AS ISIZE
    FROM ( SELECT ROOT.ID,
                  ROOT.PARENT,
                  NULL AS NAME,
                  '/' AS PATH,
                  ROOT.ITYPE,
                  ROOT.IMODE,
                  ROOT.IOWNER,
                  ROOT.IGROUP,
                  ROOT.A_TIME,
                  ROOT.M_TIME
           FROM FS_INODE ROOT
           WHERE ROOT.ID = 0
           UNION ALL
           SELECT FS.ID,
                  FS.PARENT,
                  FS.NAME,
                  SYS_CONNECT_BY_PATH(FS.NAME, '/') PATH,
                  FS.ITYPE,
                  FS.IMODE,
                  FS.IOWNER,
                  FS.IGROUP,
                  FS.A_TIME,
                  FS.M_TIME
           FROM FS_INODE FS START WITH
               PARENT = 0
           CONNECT BY
               PRIOR FS.ID = FS.PARENT
    ) VF
    LEFT JOIN FS_BLOCK BF ON VF.ID = BF.ID;
